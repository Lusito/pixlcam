(window.webpackJsonp=window.webpackJsonp||[]).push([[24],{350:function(e,t,a){"use strict";a.r(t);var s=a(26),r=Object(s.a)({},(function(){var e=this,t=e.$createElement,a=e._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[a("h1",{attrs:{id:"screen-camera"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#screen-camera"}},[e._v("#")]),e._v(" Screen Camera")]),e._v(" "),a("p",[e._v("The "),a("RouterLink",{attrs:{to:"/api/classes/ScreenCamera.html"}},[e._v("ScreenCamera")]),e._v(" is by far the most simple camera in this library.")],1),e._v(" "),a("p",[e._v("You essentially only need to make sure you call "),a("RouterLink",{attrs:{to:"/api/classes/ScreenCamera.html#resize"}},[e._v("resize")]),e._v(" to configure the viewport.")],1),e._v(" "),a("p",[e._v("Calling "),a("RouterLink",{attrs:{to:"/api/classes/ScreenCamera.html#setzoom"}},[e._v("setZoom")]),e._v(" or "),a("RouterLink",{attrs:{to:"/api/classes/ScreenCamera.html#setbounds"}},[e._v("setBounds")]),e._v(" don't really make sense to use.")],1),e._v(" "),a("p",[e._v("Calling "),a("RouterLink",{attrs:{to:"/api/classes/ScreenCamera.html#moveto"}},[e._v("moveTo")]),e._v(" is not required, as it's centered automatically on resize. It's still allowed though in case you want to implement some kind of screen-shaking effect maybe.")],1)])}),[],!1,null,null,null);t.default=r.exports}}]);