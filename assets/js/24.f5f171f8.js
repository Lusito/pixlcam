(window.webpackJsonp=window.webpackJsonp||[]).push([[24],{350:function(e,t,a){"use strict";a.r(t);var n=a(26),s=Object(n.a)({},(function(){var e=this,t=e.$createElement,a=e._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[a("h1",{attrs:{id:"influenced-camera-target"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#influenced-camera-target"}},[e._v("#")]),e._v(" Influenced Camera Target")]),e._v(" "),a("p",[e._v("Read about the "),a("RouterLink",{attrs:{to:"/guide/influenced-camera.html"}},[e._v("InfluencedCamera")]),e._v(" first.")],1),e._v(" "),a("p",[e._v("An "),a("RouterLink",{attrs:{to:"/api/interfaces/InfluencedCameraTarget.html"}},[e._v("InfluencedCameraTarget")]),e._v(" needs to implement the following properties:")],1),e._v(" "),a("h2",{attrs:{id:"position-and-zoom"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#position-and-zoom"}},[e._v("#")]),e._v(" Position and Zoom")]),e._v(" "),a("p",[e._v("The "),a("code",[e._v("x")]),e._v(" and "),a("code",[e._v("y")]),e._v(" properties represent the target position in your world. Keep them up to date.")]),e._v(" "),a("p",[e._v("The "),a("code",[e._v("zoom")]),e._v(" value will be combined with the camera zoom and the cue zoom values to form the final zoom value.")]),e._v(" "),a("h2",{attrs:{id:"aim-influences"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#aim-influences"}},[e._v("#")]),e._v(" Aim Influences")]),e._v(" "),a("p",[e._v("The "),a("code",[e._v("aims")]),e._v(" property is a list of "),a("RouterLink",{attrs:{to:"/api/classes/AimInfluence.html"}},[e._v("AimInfluence")]),e._v(" instances.")],1),e._v(" "),a("p",[e._v("Think of an aim influence as an offset vector relative to the target, attracting the camera.")]),e._v(" "),a("p",[e._v("Example use-cases:")]),e._v(" "),a("ul",[a("li",[e._v("Looking ahead of the player (use the players velocity vector).")]),e._v(" "),a("li",[e._v("Looking where the player aims (use the direction vector).")])]),e._v(" "),a("p",[e._v("You can change the offset using the "),a("RouterLink",{attrs:{to:"/api/classes/AimInfluence.html#set"}},[e._v("set")]),e._v(" method.")],1),e._v(" "),a("p",[e._v("You can configure the following settings on an AimInfluence via constructor parameter and also later via the respective public property.")]),e._v(" "),a("div",{staticClass:"language-typescript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-typescript"}},[a("code",[e._v("    "),a("span",{pre:!0,attrs:{class:"token comment"}},[e._v("/** The maximum length this influence offset can have. */")]),e._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("public")]),e._v(" maxLength"),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[e._v("number")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(";")]),e._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[e._v("/** The factor to multiply the influence offset by (before applying maxLength). Defaults to 1. */")]),e._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("public")]),e._v(" factor"),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[e._v("number")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(";")]),e._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[e._v("/** The percentage amount to move with each update. A value between 0 and 1. */")]),e._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("public")]),e._v(" lerpFactor"),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[e._v("number")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(";")]),e._v("\n")])])])])}),[],!1,null,null,null);t.default=s.exports}}]);